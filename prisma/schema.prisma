// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String        @id @default(cuid())
  name           String
  email          String        @unique
  password       String
  role           Role?         @default(USER)
  profilePicture String?
  organisation   Organisation? @relation(fields: [organisationId], references: [id])
  organisationId String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@index([organisationId])
}

model Organisation {
  id           String         @id @default(cuid())
  name         String
  users        User[]
  audioGuides  AudioGuide[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Invite       Invite[]
  AudioSection AudioSection[]
}

model AudioGuide {
  id             String         @id @default(cuid())
  title          String
  description    String?
  audioSections  AudioSection[]
  organisation   Organisation   @relation(fields: [organisationId], references: [id])
  organisationId String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@index([organisationId])
}

model AudioSection {
  id             String       @id @default(cuid())
  title          String
  description    String?
  audioFile      String
  audioGuide     AudioGuide   @relation(fields: [audioGuideId], references: [id])
  audioGuideId   String
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([audioGuideId])
  @@index([organisationId])
}

model Invite {
  id             String       @id @default(cuid())
  email          String
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId String
  role           String
  token          String       @unique
  expiry         DateTime
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([organisationId])
}
